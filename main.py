"""–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."""
import os
import json
import random
import string
import urllib.request as url
import xml.etree.ElementTree as ET
import setuptools
import uvicorn
import vk_api
from vk_api.longpoll import VkEventType, VkLongPoll
from vk_api.utils import get_random_id


{"command": "start"}

vk_session = vk_api.VkApi(
    token=os.getenv("TOKEN")
)
longpoll = VkLongPoll(vk_session)
vk = vk_session.get_api()

"""–§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã."""
def get_button(label, color, payload=""):
    return {
        "action": {"type": "text", "payload": json.dumps(payload), "label": label},
        "color": color,
    }


keyboard = {
    "one_time": True,
    "buttons": [
        [get_button(label="–í–∏—Å–µ–ª–∏—Ü–∞", color="primary")],
        [get_button(label="–ì–æ—Ä–æ—Å–∫–æ–ø", color="primary")],
        [get_button(label="–ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞", color="primary")],
    ],
}


keyboard_hangman = {
    "one_time": True,
    "buttons": [
        [
            get_button(label="üá∑üá∫", color="positive"),
            get_button(label="üá¨üáß", color="negative"),
        ]
    ],
}


keyboard_horoscope = {
    "one_time": True,
    "buttons": [
        [
            get_button(label="–í—á–µ—Ä–∞", color="primary"),
            get_button(label="–°–µ–≥–æ–¥–Ω—è", color="primary"),
            get_button(label="–ó–∞–≤—Ç—Ä–∞", color="primary"),
            get_button(label="–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞", color="primary"),
        ]
    ],
}

keyboard_play_2 = {
    "one_time": True,
    "buttons": [
        [
            get_button(label="–ö–∞–º–µ–Ω—å", color="primary"),
            get_button(label="–ù–æ–∂–Ω–∏—Ü—ã", color="primary"),
            get_button(label="–ë—É–º–∞–≥–∞", color="primary"),
        ]
    ],
}

"""–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–ª–æ–≤–∞."""
def get_valid_word(words):
    word = random.choice(words)  # —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ —Å–ø–∏—Å–∫–∞
    while "-" in word or " " in word:
        word = random.choice(words)

    return word.upper()

"""–§—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã –í–∏—Å–µ–ª–∏—Ü–∞."""
def hangman():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
            if event.text == "üá∑üá∫":
                words = [
                    "–º–∞—à–∏–Ω–∞",
                    "—Å–∞–º–æ–ª—ë—Ç",
                    "—è–±–ª–æ–∫–æ",
                    "–±–∞–Ω–∞–Ω",
                    "–≤–∏—à–Ω—è",
                    "–∞–≤—Ç–æ—Å—Ç—Ä–∞–¥–∞",
                    "–±–µ–Ω–∑–∏–Ω",
                    "–∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω",
                    "—Å–∞–º–æ–ª–µ—Ç",
                    "–±–∏–±–ª–∏–æ—Ç–µ–∫–∞",
                    "—à–∞–π–±–∞",
                    "–æ–ª–∏–º–ø–∏–∞–¥–∞",
                    "–∑–∏–º–∞",
                    "–æ–∫–µ–∞–Ω",
                ]
                alphabet = {
                    "–ê",
                    "–ë",
                    "–í",
                    "–ì",
                    "–î",
                    "–ï",
                    "–Å",
                    "–ñ",
                    "–ó",
                    "–ò",
                    "–ô",
                    "–ö",
                    "–õ",
                    "–ú",
                    "–ù",
                    "–û",
                    "–ü",
                    "–†",
                    "–°",
                    "–¢",
                    "–£",
                    "–§",
                    "–•",
                    "–¶",
                    "–ß",
                    "–®",
                    "–©",
                    "–™",
                    "–´",
                    "–¨",
                    "–≠",
                    "–Æ",
                    "–Ø",
                }
            else:
                words = ["aback", "abaft", "abandoned", "abashed"]
                alphabet = set(string.ascii_uppercase)  # –ê–ª—Ñ–∞–≤–∏—Ç (–ê–Ω–≥–ª)
            word = get_valid_word(words)
            word_letters = set(word)  # –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ
            used_letters = set()  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ
            lives = 6
            word_list = [letter if letter in used_letters else "-" for letter in word]
            vk.messages.send(
                user_id=event.user_id,
                random_id=get_random_id(),
                message="–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: "
                + " ".join(word_list)
                + "\n–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ:",
            )
            for event in longpoll.listen():
                if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
                    user_letter = event.text.upper()

                    if user_letter in alphabet - used_letters:
                        used_letters.add(user_letter)
                        if user_letter in word_letters:
                            word_letters.remove(user_letter)
                            print("")
                        else:
                            lives = lives - 1  # –í—ã—á–µ—Ç –∂–∏–∑–Ω–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                            vk.messages.send(
                                user_id=event.user_id,
                                random_id=get_random_id(),
                                message="\n–£–≤—ã, –±—É–∫–≤—ã "
                                + user_letter
                                + " –Ω–µ—Ç –≤ —ç—Ç–æ–º —Å–ª–æ–≤–µ.",
                            )
                    elif user_letter in used_letters:
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            message="\n–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç—É –±—É–∫–≤—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é.",
                        )
                    elif user_letter == word:
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message="–£–†–ê! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ " + word + "!!!",
                        )
                        return
                    else:
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            message="\n–≠—Ç–æ –Ω–µ –±—É–∫–≤–∞.",
                        )
                    if lives == 0:
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message="–í—ã —É–º–µ—Ä–ª–∏, –∏–∑–≤–∏–Ω–∏—Ç–µ. –°–ª–æ–≤–æ –±—ã–ª–æ " + word,
                        )
                        return
                    else:
                        word_list = [
                            letter if letter in used_letters else "-" for letter in word
                        ]
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            message="–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å "
                            + str(lives)
                            + " –∂–∏–∑–Ω–µ–π. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã: "
                            + " ".join(used_letters),
                        )
                        # —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä –• - –û –° –¢)
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            message="–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: "
                            + " ".join(word_list)
                            + "\n–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ:",
                        )

"""–§—É–Ω–∫—Ü–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞."""
def horoscope():
    response = url.urlopen("https://ignio.com/r/export/win/xml/daily/com.xml")
    tree = ET.parse(response)
    root = tree.getroot()

    horoscope = {}
    day = ""

    for zodiak in root:
        result = {}
        for day in zodiak:
            result.update({day.tag: day.text})
        horoscope.update({zodiak.tag: result})

    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
            event.text = event.text.lower()
            if event.text == "–≤—á–µ—Ä–∞":
                day = "yesterday"
            elif event.text == "—Å–µ–≥–æ–¥–Ω—è":
                day = "today"
            elif event.text == "–∑–∞–≤—Ç—Ä–∞":
                day = "tomorrow"
            elif event.text == "–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞":
                day = "tomorrow02"
            else:
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard_horoscope, ensure_ascii=True),
                    message="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞üò®\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –≤—ã –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É",
                )
                continue
            vk.messages.send(
                user_id=event.user_id,
                random_id=get_random_id(),
                message="–ù–∞–ø–∏—à–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞",
            )
            for event in longpoll.listen():
                if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
                    event.text = event.text.lower()
                    if event.text == "–æ–≤–µ–Ω":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("aries").get(day),
                        )
                        return
                    elif event.text == "—Ç–µ–ª–µ—Ü":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("taurus").get(day),
                        )
                        return
                    elif event.text == "–±–ª–∏–∑–Ω–µ—Ü—ã":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("gemini").get(day),
                        )
                        return
                    elif event.text == "—Ä–∞–∫":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("cancer").get(day),
                        )
                        return
                    elif event.text == "–ª–µ–≤":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("leo").get(day),
                        )
                        return
                    elif event.text == "–¥–µ–≤–∞":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("virgo").get(day),
                        )
                        return
                    elif event.text == "–≤–µ—Å—ã":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("libra").get(day),
                        )
                        return
                    elif event.text == "—Å–∫–æ—Ä–ø–∏–æ–Ω":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("scorpio").get(day),
                        )
                        return
                    elif event.text == "—Å—Ç—Ä–µ–ª–µ—Ü":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("sagittarius").get(day),
                        )
                        return
                    elif event.text == "–∫–æ–∑–µ—Ä–æ–≥":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("capricorn").get(day),
                        )
                        return
                    elif event.text == "–≤–æ–¥–æ–ª–µ–π":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("aquarius").get(day),
                        )
                        return
                    elif event.text == "—Ä—ã–±—ã":
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            keyboard=json.dumps(keyboard, ensure_ascii=True),
                            message=horoscope.get("pisces").get(day),
                        )
                        return
                    else:
                        vk.messages.send(
                            user_id=event.user_id,
                            random_id=get_random_id(),
                            message="–ó–≤–µ–∑–¥—ã –Ω–µ —Å–æ—à–ª–∏—Å—å, —Ç–∞–∫–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –Ω–µ—Ç",
                        )
                        continue

"""–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ–±–µ–¥—É –≤ –∏–≥—Ä–µ –ö–ù–ë."""
def is_win(player, opponent):
    # return true –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª
    if (
        (player == "–ö" and opponent == "–ù")
        or (player == "–ù" and opponent == "–ë")
        or (player == "–ë" and opponent == "–ö")
    ):
        return True

"""–§—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞."""
def play_2():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
            event.text = event.text.upper()
            event.text = event.text[:1]
            computer = random.choice(["–ö", "–ù", "–ë"])
            if event.text == computer:
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard, ensure_ascii=True),
                    message="–û –∫–∞–∫. –Ø –Ω–µ –º–æ–≥ —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å,–Ω–æ... –ù–∞—à–∏ –º—ã—Å–ª–∏ —Å—Ö–æ–¥—è—Ç—Å—è",
                )
                return
            if is_win(event.text, computer):
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard, ensure_ascii=True),
                    message="–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ... –¢—ã –ø–æ–±–µ–¥–∏–ª",
                )
                return

            vk.messages.send(
                user_id=event.user_id,
                random_id=get_random_id(),
                keyboard=json.dumps(keyboard, ensure_ascii=True),
                message="–≠—Ç–æ –±—ã–ª–æ –ø—Ä–æ—Å—Ç–æ. –Ø –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–ª—å–Ω–µ–µ, –∫–∞–∫ –≤—Å–µ–≥–¥–∞.",
            )
            return

"""–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ç—É–¥–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å."""
async def main():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
            event.text = event.text.lower()
            print("New from {}, text = {}".format(event.user_id, event.text))

            if (
                event.text == "–Ω–∞—á–∞—Ç—å" or event.text == "–ø—Ä–∏–≤–µ—Ç"
            ):  # –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –∑–∞–¥–∞–Ω–Ω—É—é —Ñ—Ä–∞–∑—É
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard, ensure_ascii=True),
                    message="üòÄ–ü—Ä–∏–≤–µ—Ç‚ù§, "
                    + vk.users.get(user_id=event.user_id)[0]["first_name"]
                    + ", —è —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç."
                    + " –Ø –º–æ–≥—É:\n1) –ü–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –≤–∏—Å–µ–ª–∏—Ü—É\n2) –ü–æ–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø\n3)–ü–æ–∏–≥—Ä–∞—Ç—å –≤ –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞\n"
                    + "\n–ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–π —Ä–µ–≥–∏—Å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π",
                )
            elif event.text == "–ø–æ–º–æ—â—å":
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard, ensure_ascii=True),
                    message=" –Ø –º–æ–≥—É:\n1) –ü–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –≤–∏—Å–µ–ª–∏—Ü—É\n2) –ü–æ–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø\n"
                    + "\n–ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–π —Ä–µ–≥–∏—Å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π",
                )
            elif event.text == "–≤–∏—Å–µ–ª–∏—Ü–∞":
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard_hangman, ensure_ascii=True),
                    message="–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ —Ö–æ—Ç–∏—Ç–µ —É–≥–∞–¥—ã–≤–∞—Ç—å",
                )
                hangman()
            elif event.text == "–≥–æ—Ä–æ—Å–∫–æ–ø":
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard_horoscope, ensure_ascii=True),
                    message="–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É",
                )
                horoscope()
            elif event.text == "–∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞":
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard_play_2, ensure_ascii=True),
                    message="–ö–∞–∫–æ–π –≤–∞—à –≤—ã–±–æ—Ä? "
                    "–ö"
                    " - –ö–∞–º–µ–Ω—å, "
                    "–ù"
                    " - –ù–æ–∂–Ω–∏—Ü—ã, "
                    "–ë"
                    " - –ë—É–º–∞–≥–∞\n",
                )
                play_2()
            else:
                vk.messages.send(
                    user_id=event.user_id,
                    random_id=get_random_id(),
                    keyboard=json.dumps(keyboard, ensure_ascii=True),
                    message='üò®–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞üò∞.\n–ù–∞–ø–∏—à–∏ "–ü–æ–º–æ—â—å"',
                )

                
async def app(scope, receive, send):
    assert scope['type'] == 'http'

    
    await send({
        'type': 'http.response.start',
        'status': 200,
        'headers': [
            [b'content-type', b'text/plain'],
        ],
    })
    
    await send({
        'type': 'http.response.body',
        'body': b'Hello, world!',
    })
    
    await main()
    
    
